# Nombre visible del workflow en la pestaña "Actions" de GitHub
name: Terraform CI

# Define cuándo se ejecuta este workflow
on:
  push:
    branches:
      - main            # Se ejecuta al hacer push a la rama main
  pull_request:         # También al crear un pull request

jobs:

  # ✅ JOB 1: Revisar formato del código Terraform
  format:
    name: ✅ Terraform Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Format Check
        run: terraform fmt -check    # Verifica que el código esté bien formateado


  # 🔍 JOB 2: Validar sintaxis (solo si pasó "format")
  validate:
    name: 🔍 Terraform Validate
    runs-on: ubuntu-latest
    needs: format                    # Se ejecuta solo si "format" fue exitoso

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init          # Descarga proveedores y configura el proyecto

      - name: Terraform Validate
        run: terraform validate      # Verifica sintaxis, tipos y dependencias


  # 📦 JOB 3: Ejecutar terraform plan (solo si pasó "validate")
  plan:
    name: 📦 Terraform Plan
    runs-on: ubuntu-latest
    needs: validate

    # Se cargan las credenciales AWS desde los GitHub Secrets
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      # 📝 Ejecuta terraform plan y guarda el resultado en un archivo plano
      - name: Terraform Plan
        run: terraform plan -var-file="terraform.tfvars" -no-color > plan_output.txt

      # 📦 Publica el archivo como artifact descargable (opcional pero útil)
      - name: Upload plan output as artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: plan_output.txt

      # 🧾 Agrega el resultado del plan como resumen visible en la UI de GitHub
      - name: Show Terraform Plan Summary
        run: cat plan_output.txt >> $GITHUB_STEP_SUMMARY

# Nombre visible del workflow en la pesta√±a "Actions" de GitHub
name: Terraform CI

# Define cu√°ndo se ejecuta este workflow
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      tf_action:
        description: 'Acci√≥n a ejecutar con Terraform'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

jobs:

  # ‚úÖ JOB 1: Revisar formato del c√≥digo Terraform
  format:
    name: ‚úÖ Terraform Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Format Check
        run: terraform fmt -check    # Verifica que el c√≥digo est√© bien formateado


  # üîç JOB 2: Validar sintaxis (solo si pas√≥ "format")
  validate:
    name: üîç Terraform Validate
    runs-on: ubuntu-latest
    needs: format                    # Se ejecuta solo si "format" fue exitoso

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init          # Descarga proveedores y configura el proyecto

      - name: Terraform Validate
        run: terraform validate      # Verifica sintaxis, tipos y dependencias


  # üì¶ JOB 3: Ejecutar terraform plan (solo si pas√≥ "validate")
  plan:
    name: üì¶ Terraform Plan
    runs-on: ubuntu-latest
    needs: validate

    # Se cargan las credenciales AWS desde los GitHub Secrets
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Esperar aprobaci√≥n manual
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: Prisciflores
          minimum-approvals: 1
          issue-title: "¬øAplicamos cambios en aws?"
          issue-body: "Aprueba este paso para ejecutar 'terraform apply'."
          exclude-workflow-initiator-as-approver: false

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var-file="terraform.tfvars" -no-color > plan_output.txt

      - name: Upload plan output as artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: plan_output.txt

      - name: Show Terraform Plan Summary
        run: cat plan_output.txt >> $GITHUB_STEP_SUMMARY


  # ‚úÖ JOB 4: Ejecutar 'terraform apply' si el input lo indica
  terraform-apply:
    name: üöÄ Terraform Apply
    needs: plan
    if: ${{ github.event.inputs.tf_action == 'apply' }}
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://github.com/prisciflores/terraform-networking/actions

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve


  # ‚ùå JOB 5: Ejecutar 'terraform destroy' si el input lo indica
  terraform-destroy:
    name: ‚ö†Ô∏è Terraform Destroy
    needs: plan
    if: ${{ github.event.inputs.tf_action == 'destroy' }}
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://github.com/prisciflores/terraform-networking/actions

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
